@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
	$(document).ready(function () {
		//1.初始化Table
		var oTable = new TableInit();
		oTable.Init();

	});
	var TableInit = function () {
		var oTableInit = new Object();
		//初始化Table
		oTableInit.Init = function () {
			$('#tb_departments').bootstrapTable({
				url: '/SystemManage/ClassifySet/GetGridJson',         //请求后台的URL（*）
				method: 'get',                      //请求方式（*）
				toolbar: '#toolbar',                //工具按钮用哪个容器
				checkboxHeader: false,
				striped: true,                      //是否显示行间隔色
				cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
				pagination: true,                   //是否显示分页（*）
				sortable: false,                     //是否启用排序
				sortOrder: "asc",                   //排序方式
				queryParams: oTableInit.queryParams,//传递参数（*）
				sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
				pageNumber: 1,                       //初始化加载第一页，默认第一页
				pageSize: 10,                       //每页的记录行数（*）
				pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
				search: false,                       //是否显示表格搜索
				strictSearch: false,
				showColumns: false,                  //是否显示所有的列
				showRefresh: false,                  //是否显示刷新按钮
				minimumCountColumns: 2,             //最少允许的列数
				clickToSelect: false,                //是否启用点击选中行
				height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
				uniqueId: "ID",                     //每一行的唯一标识，一般为主键列
				showToggle: false,                    //是否显示详细视图和列表视图的切换按钮
				cardView: false,                    //是否显示详细视图
				detailView: false,                   //是否显示父子表
				columns: [{
					checkbox: false,
					visible: false
				}, {
					field: 'F_ChineseName',
					title: '分类名称'
				}, {
					field: 'F_EnglishName',
					title: '分类父级'
				}, {
					field: 'Button',
					title: '操作',
					events: operateEvents,
					formatter: AddFunctionAlty
				},]
			});
		};

		//得到查询的参数
		oTableInit.queryParams = function (params) {
			var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
				keyword: '',
				sidx: 'F_Id',   //页面大小
				sord: 'asc',  //页码
				limit: params.limit,
				offset: params.offset
			};
			return temp;
		};
		return oTableInit;
	};

	function AddFunctionAlty(value, row, index) {
		return [
			'<button class="btn btn-primary btn-xs" id="TableEdite">编辑</button> &nbsp;&nbsp;',
			'<button class="btn btn-danger btn-xs" id="TableSet">合并</button>'
		].join("")
	}
	window.operateEvents = {
		"click #TableEdite": function (e, value, row, index) {
			window.location.href = "/SystemManage/ClassifySet/CreateModel?keyValue=" + row.F_Id + "";
		},
		"click #TableSet": function (e, value, row, index) {
			window.location.href = "/SystemManage/ClassifySet/CreateModel?keyValue=" + row.F_Id + "";
		},
	}

	function btnAdd() {
		window.location.href = "/SystemManage/ClassifySet/CreateModel";
	}
</script>
<div class="row wrapper border-bottom white-bg page-heading" style="margin-left: -0px;">
	<div class="col-lg-10">
		<ol class="breadcrumb" style="padding:10px 0px 0px 10px;">
			<li>
				<a>系统管理</a>
			</li>
			<li class="active">
				<strong>分类设置</strong>
			</li>
		</ol>
	</div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
	<div class="row">
		<div class="col-lg-12">
			<div class="ibox float-e-margins">
				<div class="ibox-title">
					<h5>分类设置</h5>
				</div>
				<div class="ibox-content">
					<div class="form-inline">
						<div class="form-group">
							<input type="text" class="form-control" placeholder="名称" name="name" />
						</div>
						<button type="button" class="btn btn-success">查询</button>
						<button type="button" class="btn btn-info" id="btn_add" onclick="btnAdd()">新建</button>
					</div>
					<div class="table-responsive">
						<table id="tb_departments"></table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
